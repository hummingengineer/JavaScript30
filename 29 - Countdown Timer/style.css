html {
  /* 요소의 너비와 높이를 계산하는 방법을 지정 */
  /* 테두리와 안쪽 여백의 크기도 요소의 크기로 고려 */
  /* 테두리를 기준으로 크기를 정함 */
  box-sizing: border-box;
  font-size: 10px;
  background: #8E24AA;
  /* 두 개 이상의 색이 직선을 따라 점진적으로 변화하는 이미지를 생성 */
  background: linear-gradient(45deg,  #42a5f5 0%,#478ed1 50%,#0d47a1 100%);
}

/* 전체 선택자(Universal Selector)는 모든 HTML 요소를 선택합니다. 별표(*)로 나타냅니다. */
/* :before : 해당 태그의 앞에 놓여진다 */
/* :after : 해당 태그의 다음 위치에 놓여진다. */
*, *:before, *:after {
  /* 부모 요소의 속성값을 상속 받음 */
  box-sizing: inherit;
}

body {
  margin: 0;
  text-align: center;
  font-family: 'Inconsolata', monospace;
}

.display__time-left {
  font-weight: 100;
  font-size: 20rem;
  margin: 0;
  color: white;
  /* 글자에 그림자 효과를 주는 속성 */
  text-shadow: 4px 4px 0 rgba(0,0,0,0.05);
}

.timer {
  display: flex;
  /* vh = viewport height */
  /* 현재 실행중인 스크린 크기에 맞춰 상대적 크기를 반환 */
  /* 100vh가 전체 화면의 기준 */
  min-height: 100vh;
  /* 플렉스 컨테이너 내의 아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정 */
  flex-direction: column;
}

.timer__controls {
  display: flex;
}

.timer__controls > * {
  flex: 1;
}

.timer__controls form {
  flex: 1;
  display: flex;
}

.timer__controls input {
  flex: 1;
  border: 0;
  padding: 2rem;
}

.timer__button {
  background: none;
  border: 0;
  cursor: pointer;
  color: white;
  font-size: 2rem;
  /* 대문자로 또는 소문자로 바꾸는 속성 */
  text-transform: uppercase;
  background: rgba(0,0,0,0.1);
  border-bottom: 3px solid rgba(0,0,0,0.2);
  border-right: 1px solid rgba(0,0,0,0.2);
  padding: 1rem;
  font-family: 'Inconsolata', monospace;
}

.timer__button:hover,
.timer__button:focus {
  background: rgba(0,0,0,0.2);
  outline: 0;
}

.display {
  flex: 1;
  display: flex;
  /* 플렉스 요소는 수직 방향으로 위쪽에서 아래쪽으로 배치 */
  flex-direction: column;
  /* 플렉스 요소는 플렉스 컨테이너의 가운데에 배치 */
  align-items: center;
  /* 요소는 플렉스 컨테이너의 가운데에서부터 배치 */
  justify-content: center;
}

.display__end-time {
  font-size: 4rem;
  color: white;
}
